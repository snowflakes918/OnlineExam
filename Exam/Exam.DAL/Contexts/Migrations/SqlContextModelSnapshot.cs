// <auto-generated />
using System;
using Exam.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exam.DAL.Contexts.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exam.BOL.Entities.Option", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionID");

                    b.Property<string>("answer")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("correct");

                    b.Property<int>("pIndex");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("Exam.BOL.Entities.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TestID");

                    b.Property<string>("name")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.HasIndex("TestID");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Exam.BOL.Entities.Test", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("content")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("Exam.BOL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("Varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("Varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Exam.BOL.Entities.Option", b =>
                {
                    b.HasOne("Exam.BOL.Entities.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Exam.BOL.Entities.Question", b =>
                {
                    b.HasOne("Exam.BOL.Entities.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
